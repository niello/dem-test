// Forward rendering:
// - Render solid objects to depth buffer, front to back (only if render to texture?)
// - Render atest objects to depth buffer, front to back (only if render to texture?)
// - Occlusion (against z-buffer filled by 1 and 2)
// - Render sky without zwrite and mb without ztest //???better to render sky after all other non-alpha/additive geometry?
// - Render terrain (lightmapped/unlit/...?) FTB //???render after all opaque except skybox?
// - Render opaque geometry (static, skinned, blended, envmapped) FTB
// - Render alpha-tested geometry (static, leaf, tree) FTB
// - Render alpha-blended geometry (alpha, alpha_soft, skinned_alpha, env_alpha, water) BTF
// - Render particles (alpha, then additive) BTF?
// - HDR

// Used as base pass for all shaders and as include path for online fx compilation in debug builds
ShaderPath = "Shaders:"

// List of shaders to be loaded. If no extension, loader tries to find FXO as FXO, FX as FX, no ext as FXO.
Shaders
{
	Shared		= "Lib/Shared"

	// Materials
	Unlit		= "SM_3_0/Unlit"
	Phong		= "SM_3_0/Phong"

	// Passes
	PassDepth	= "Lib/Passes/Depth"
	PassColor	= "Lib/Passes/Color"

	// Batches
	BatchSolid	= "Lib/Batches/Solid"
	BatchATest	= "Lib/Batches/ATest"
	Terrain		= "SM_3_0/CDLODTerrain"
	Shapes		= "SM_3_0/Shapes"
}

//ShaderVars { }

RenderTargets
{
	Depth
	{
		RTFormat = "R32F"
		UseAutoDepthStencil = true
	}
}

Passes
{
	Depth // Early Z-pass with rendering to depth texture
	{
		Type = "Geometry"
		Shader = 'PassDepth'
		// ShaderVars { } //??? & textures?
		RenderTargets [ 'Depth' ]
		ClearColor = 0xff000000 //(0.0, 0.0, 0.0, 1.0)
		ClearDepth = 1.0
		Batches
		[
			{
				Renderer = "Render::CModelRenderer"
				BatchType = 'Solid'
				FeatFlags = "Depth" //???Solid|Depth?
				//Sort = "FrontToBack" - doesn't work with instancing
				EnableLighting = false
				MaxInstanceCount = 16 //???share instance buffer?
			},
			{
				Renderer = "Render::CModelRenderer"
				BatchType = 'ATest'
				FeatFlags = "Depth"
				//Sort = "FrontToBack" - doesn't work with instancing
				EnableLighting = false
				MaxInstanceCount = 16
			},
			{
				Renderer = "Render::CTerrainRenderer"
				Shader = 'Terrain'
				FeatFlags = "Depth"
				EnableLighting = false
				MaxInstanceCount = 256
			}
		]
	}
	
	// Occlusion
	// Shadows

	Color
	{
		Type = "Geometry"
		Shader = 'PassColor'
		// ShaderVars { } //??? & textures?
		// No RT - default one
		ClearColor = 0xff000000
		Batches
		[
			{
				Renderer = "Render::CModelRenderer"
				Shader = 'BatchSolid'
				BatchType = 'Solid'
				EnableLighting = true
				MaxInstanceCount = 16
			},
			{
				Renderer = "Render::CModelRenderer"
				Shader = 'BatchATest'
				BatchType = 'ATest'
				EnableLighting = true
				MaxInstanceCount = 16
			},
			{
				Renderer = "Render::CTerrainRenderer"
				Shader = 'Terrain'
				//FeatFlags = "Default"
				EnableLighting = true
				MaxInstanceCount = 256 //!!!share buffer! //???use cross-pass renderers?
			},
			{ Renderer = "Render::CDebugGeomRenderer" },
			{ Renderer = "Render::CUIRenderer" },
			{ Renderer = "Render::CDebugTextRenderer" }
		]
	}
}